=== 03-CODIGO-FONTE ===
--- app/globals.css ---
@import "tailwindcss";

html, body { height: 100%; }
.no-scrollbar::-webkit-scrollbar { display: none; }
.no-scrollbar { -ms-overflow-style: none; scrollbar-width: none; }

body { background: #f5f5f5; }

--- app/components/BottomTabBar.tsx ---
export default function BottomTabBar() {
  const Item = ({ id, label, icon, active }: { id: string; label: string; icon: string; active?: boolean }) => (
    <button
      className={`flex flex-col items-center justify-center flex-1 py-2 ${active ? 'text-red-600' : 'text-gray-500'}`}
      aria-current={active ? 'page' : undefined}
      aria-label={label}
    >
      <span aria-hidden className="text-lg">{icon}</span>
      <span className="text-[11px] leading-none">{label}</span>
    </button>
  );
  return (
    <nav aria-label="Navegação principal" className="fixed bottom-0 left-0 right-0 bg-white border-t z-50 md:hidden" style={{ paddingBottom: 'env(safe-area-inset-bottom)' }}>
      <div className="max-w-7xl mx-auto px-2 grid grid-cols-5">
        <Item id="feed" label="Feed" icon="🏠" active />
        <Item id="explorar" label="Explorar" icon="🔎" />
        <Item id="mapa" label="Mapa" icon="🗺️" />
        <Item id="cine" label="Cine" icon="🎬" />
        <Item id="perfil" label="Perfil" icon="👤" />
      </div>
    </nav>
  );
}

--- app/page.tsx ---
export default function Home() {
  return (
    <section className="bg-white p-6 rounded-lg shadow-sm">
      <h1 className="text-xl font-bold">Home — MVP Social (Fase 1) — CSS on — TABBAR ACTIVE</h1>
      <p className="mt-2 text-gray-700">Header e Footer canônicos renderizados. Próximo: BottomTabBar + Feed.</p>
    </section>
  );
}

--- app/layout.tsx ---
import './globals.css';
export const metadata = { title: "Guerra & Paz" };
export const metadata = { title: "Guerra & Paz" };
import BottomTabBar from "./components/BottomTabBar";
export default function RootLayout({ children }: { children: React.ReactNode }) {
import BottomTabBar from "./components/BottomTabBar";
export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
  return (
    <html lang="pt-BR">
    <html lang="pt-BR">
      <body className="min-h-svh bg-gray-100 text-gray-900">
      <body className="min-h-svh bg-gray-100 text-gray-900">
        <header className="bg-white sticky top-0 z-50 border-b">
        <header className="bg-white sticky top-0 z-50 border-b">
          <div className="max-w-7xl mx-auto px-4 py-3 flex items-center justify-between">
          <div className="max-w-7xl mx-auto px-4 py-3 flex items-center justify-between">
            <span aria-label="GUERRA É PAZ — logomarca oficial" className="font-black">GUERRA É PAZ</span>
            <span aria-label="GUERRA É PAZ — logomarca oficial" className="font-black">GUERRA É PAZ</span>
            <div className="flex items-center gap-1">
            <div className="flex items-center gap-1">
              <button aria-label="Buscar" className="p-2 rounded hover:bg-gray-100">🔎</button>
              <button aria-label="Buscar" className="p-2 rounded hover:bg-gray-100">🔎</button>
              <button aria-label="Notificações" className="p-2 rounded hover:bg-gray-100">🔔</button>
              <button aria-label="Notificações" className="p-2 rounded hover:bg-gray-100">🔔</button>
              <button className="bg-red-600 text-white font-semibold py-1.5 px-3 rounded-lg text-sm">Entrar</button>
              <button className="bg-red-600 text-white font-semibold py-1.5 px-3 rounded-lg text-sm">Entrar</button>
            </div>
            </div>
          </div>
          </div>
          <nav aria-label="Navegação secundária" className="hidden md:block bg-white border-t">
          <nav aria-label="Navegação secundária" className="hidden md:block bg-white border-t">
            <div className="max-w-7xl mx-auto px-4 flex items-center gap-6 py-2 text-sm">
            <div className="max-w-7xl mx-auto px-4 flex items-center gap-6 py-2 text-sm">
              <a className="text-red-600 font-medium" href="#">Feed</a>
              <a className="text-red-600 font-medium" href="#">Feed</a>
              <a className="text-gray-600 hover:text-red-600" href="#">Explorar</a>
              <a className="text-gray-600 hover:text-red-600" href="#">Explorar</a>
              <a className="text-gray-600 hover:text-red-600" href="#">Mapa</a>
              <a className="text-gray-600 hover:text-red-600" href="#">Mapa</a>
              <a className="text-gray-600 hover:text-red-600" href="#">Cinemateca</a>
              <a className="text-gray-600 hover:text-red-600" href="#">Cinemateca</a>
              <a className="text-gray-600 hover:text-red-600 ml-auto" href="#">Loja</a>
              <a className="text-gray-600 hover:text-red-600 ml-auto" href="#">Loja</a>
            </div>
            </div>
          </nav>
          </nav>
        </header>

--- app/page.jsx ---
export default function Home() {
  return (
    <main style={{padding:20,fontFamily:'ui-sans-serif,system-ui'}}>
      <h1>GUERRA & PAZ — Social</h1>
      <p>Deploy em produção funcionando ✅</p>
      <ul>
        <li><a href="/entrar">/entrar (login)</a></li>
        <li><a href="/dashboard">/dashboard</a></li>
        <li><a href="/api/dossie?limit=2">/api/dossie?limit=2</a></li>
      </ul>
    </main>
  );
}

--- app/entrar/page.jsx ---
'use client';
import { useRouter } from 'next/navigation';
export default function Entrar() {
  const router = useRouter();
  function loginDemo() {
    localStorage.setItem('gp_auth', JSON.stringify({ email: 'demo@user' }));
    router.push('/dashboard');
  }
  return (
    <main style={{padding:20,fontFamily:'ui-sans-serif,system-ui'}}>
      <h2>Entrar</h2>
      <p>Login de demonstração (sem backend)</p>
      <button onClick={loginDemo}>Entrar como demo</button>
    </main>
  );
}

--- app/dashboard/page.jsx ---
export default function Dashboard() {
  return (
    <main style={{padding:20,fontFamily:'ui-sans-serif,system-ui'}}>
      <h2>Dashboard</h2>
      <p>Placeholder do dashboard.</p>
    </main>
  );
}

--- app/layout.jsx ---
export const metadata = { title: 'GUERRA & PAZ — Social' };
export default function RootLayout({ children }) {
  return (
    <html lang="pt-BR">
      <body style={{ margin: 0 }}>{children}</body>
    </html>
  );
}

--- app/api/dossie/route.js ---
export async function GET(req) {
  const { searchParams } = new URL(req.url);
  const limit = Math.max(1, Math.min(50, Number(searchParams.get('limit') ?? 3)));
  const items = Array.from({ length: limit }, (_, i) => ({
    id: i + 1, title: `Item ${i + 1}`
  }));
  return Response.json({ ok: true, count: items.length, items });
}

--- app/api/health/deep/route.js ---
export const dynamic = 'force-dynamic';

function getProcessStats() {
  const mem = process.memoryUsage();
  return {
    uptimeSec: Math.round(process.uptime()),
    memoryMB: Math.round(mem.rss / 1024 / 1024),
  };
}

export async function GET() {
  const app = getProcessStats();
  const thresholds = { uptimeSecMin: 10, memoryMBMax: 1024 };
  const status =
    app.uptimeSec >= thresholds.uptimeSecMin && app.memoryMB <= thresholds.memoryMBMax
      ? 'ok'
      : 'degraded';

  const body = {
    status,
    checks: {
      app,
      db: { status: 'skipped', note: 'sem DB ainda' },
      external: { status: 'skipped' }
    }
  };

  return new Response(JSON.stringify(body), {
    status: status === 'ok' ? 200 : 503,
    headers: { 'content-type': 'application/json; charset=utf-8' },
  });
}

--- app/api/health/route.js ---
export const dynamic = 'force-dynamic';
export async function GET() {
  return new Response(JSON.stringify({ ok: true }), {
    status: 200,
    headers: { 'content-type': 'application/json; charset=utf-8' },
  });
}

