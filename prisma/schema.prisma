// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  name        String?
  avatar      String?
  bio         String?
  level       UserLevel @default(RECRUIT)
  xp          Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  posts       Post[]
  comments    Comment[]
  reactions   Reaction[]

  @@map("users")
}

model Post {
  id          String   @id @default(cuid())
  title       String
  content     String
  authorId    String
  category    String
  area        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments    Comment[]
  reactions   Reaction[]

  @@map("posts")
}

model Comment {
  id          String   @id @default(cuid())
  content     String
  authorId    String
  postId      String
  createdAt   DateTime @default(now())

  author      User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post        Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Reaction {
  id          String   @id @default(cuid())
  type        ReactionType
  authorId    String
  postId      String
  createdAt   DateTime @default(now())

  author      User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post        Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([authorId, postId])
  @@map("reactions")
}

enum UserLevel {
  RECRUIT
  OPERATOR
  AGENT
  MASTER
}

enum ReactionType {
  LIKE
  INSIGHT
  DISAGREE
  BOOST
}
